public sealed class Singleton
{
    private static Singleton instance=null;

    private Singleton()
    {
    }

    public static Singleton Instance
    {
        get
        {
            if (instance == null)
            {
                instance = new Singleton();
            }
            return instance;
        }
    }
}

-------------------Thread safe--------------------------

public sealed class Singleton
{
    private static Singleton instance = null;
    private static readonly object padlock = new object();

    Singleton()
    {
    }

    public static Singleton Instance
    {
    	get
    	{
    	  lock (padlock)
    	  {
    	    if (instance == null)
    	    {
    		instance = new Singleton();
    	    }
    	    return instance;
    	  }
    	}
    }
}
